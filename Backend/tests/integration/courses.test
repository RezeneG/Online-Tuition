// backend/tests/integration/courses.test.js
import request from 'supertest';
import app from '../../server.js';
import Course from '../../models/Course.js';
import User from '../../models/User.js';

describe('Courses Integration Tests', () => {
  let authToken;

  beforeEach(async () => {
    // Clean up before each test
    await Course.deleteMany({});
    await User.deleteMany({});

    // Create a test user and get auth token
    const registerResponse = await request(app)
      .post('/api/auth/register')
      .send({
        name: 'Admin User',
        email: 'admin@test.com',
        password: 'password123',
        role: 'admin'
      });

    authToken = registerResponse.body.token;
  });

  test('should create a new course', async () => {
    const response = await request(app)
      .post('/api/courses')
      .set('Authorization', `Bearer ${authToken}`)
      .send({
        title: 'Test Course',
        description: 'Test course description',
        category: 'Technology',
        level: 'Beginner',
        price: 99
      });

    expect(response.status).toBe(201);
    expect(response.body.title).toBe('Test Course');
  });

  test('should get all courses', async () => {
    // Create a course first
    await request(app)
      .post('/api/courses')
      .set('Authorization', `Bearer ${authToken}`)
      .send({
        title: 'Test Course',
        description: 'Test description',
        category: 'Technology',
        level: 'Beginner',
        price: 99
      });

    const response = await request(app)
      .get('/api/courses');

    expect(response.status).toBe(200);
    expect(response.body).toHaveLength(1);
    expect(response.body[0].title).toBe('Test Course');
  });
});
